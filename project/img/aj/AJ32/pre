<!DOCTYPE html>
<html>

<head>
    <title>京东</title>
    <meta charset="utf-8">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=no,maximum-scale=1.0,viewport-fit=cover">
    <meta name="format-detection" content="telephone=no">
    <meta name="x5-cache" content="enable">
    <link rel="stylesheet" href="https://storage.360buyimg.com/babel/00162638/333378/production/dev/parser.1526555535098.css?t=20180517191236">
    <style>
        img {
            opacity: 1 !important;
        }
        .errorPage {
            margin-top: 10%;
        }
    </style>
</head>

<body style="background:#fff;" id="root">
    <div class="errorPage">
        <section class="error" style="padding-top:70%;">
            <div class="con">
                <div class="bg"></div>
                <p class="text">
                    <span>抱歉，您访问的内容不存在～</span>
                </p>
            </div>
        </section>
    </div>
    <script src="https://storage.360buyimg.com/babel/00057886/122562/production/dev/zepto.js?t=20180516203248"></script>
    <script src="https://wl.jd.com/unify.min.js"></script>
    <script>
        $(function () {
            try {
                var pv = new MPing.inputs.PV({
                    page_id: 'Babel_error'
                });
                var mping = new MPing();
                mping.send(pv);
            } catch (e) {}

            var $floor = $('#root');

            var jumpLink = function (url, target) {
                var node = $('#J_jumpLink');
                //add
                if (node.length === 0) {
                    node = $('<a>');
                    node.attr('id', 'J_jumpLink')
                        .css('display', 'none');
                    $('body').append(node);
                }
                var itemTarget = target ? target : '_self';
                node.attr({
                    href: url,
                    target: itemTarget
                });
                node.click();
            };

            var trackingParamMap = function (trackingParam, activityData, defaultLevel) {
                var eventData = {};
                for (var p in trackingParam) {
                    eventData[p] = trackingParam[p];
                }
                var eventLevel = eventData.event_level;
                // 判断是订单等级
                eventData.event_level = eventLevel == undefined ? defaultLevel : eventLevel;
                eventData.page_param = activityData.pageId; //购物车埋点
                return eventData;
            };

            var clickTracking = function (obj) {
                if (!MPing) return;
                var click = new MPing.inputs.Click(obj.event_id); // 设置click的参数,可以设置其他参数
                obj = obj || {};
                for (var p in obj) {
                    click[p] = obj[p];
                }
                click.updateEventSeries(); //更新事件串
                var mping = new MPing(); //构造上报实例
                mping.send(click); //上报click
            };

            var globalSimulationClick = function (obj) {
                obj = obj || {};
                try {
                    obj.page_name = window.location.href;
                    clickTracking(obj);
                } catch (e) {}
            };
            var reportEventdata = function (trackingParam, activityData) {
                var eventData = trackingParamMap(trackingParam, activityData, '3');
                globalSimulationClick(eventData);
            };
            var addStyleCls = function (arr, cls) {
                if (cls && cls.length > 0) {
                    arr.push(cls);
                }
            };



            //活动池
            var fn1 = 'babelExceptionPage';
            var activityId1 = '3iT4TCyokQK29S6gi3LCSPhUAzi5';

            //
            var fn2 = 'qryH5BabelFloors';
            var activityId2 = '2mbwY2RR4YdVwcPX1RcaitpX2nbE';


            $floor.on('click', 'a.J_errorAdLink', function () {
                var self = $(this);
                var srv = self.data('srv');
                var link = self.data('link');

                reportEventdata({
                    event_id: 'Babel_dev_adv_act',
                    event_param: srv,
                    event_level: '3'
                }, activityId1);

                setTimeout(function () {
                    jumpLink(link);
                }, 200);
            });







            $floor.on('click', '.J_ping', function () {
                var $dom = $(this);
                var link = $dom.data('href');
                var _id = $dom.attr('report-eventid');
                var _param = $dom.attr('report-eventparam');
                var _level = $dom.attr('report-eventlevel');
                var _page = $dom.attr('report-pagename');
                reportEventdata({
                    event_id: _id,
                    event_param: _param,
                    event_level: _level,
                    event_page: _page
                }, activityId2);

                setTimeout(function () {
                    jumpLink(link);
                }, 200);


            });


            var imgWrapList = $('.img_wrap_puzzle');
            var len = imgWrapList.length;
            for (var i = 0; i < len; i++) {
                var dw = imgWrapList[i].dataset.dw,
                    dh = imgWrapList[i].dataset.dh;
                var h = Math.floor($(window).width() * (dh / dw));
                $(imgWrapList[i]).height(h);
                $(imgWrapList[i]).children('.img_wrap_puzzle_bg').height(h);
            }

        });
    </script>
</body>

</html>
